
{
"rxClaimNbr":211391504171000,
"rxSeq": 999,
"tcdStatus": "P",
"tenantId": "RXDV1_PRD"
}

Reponse:
{
    "rxClaimNbr": 211391504171000,
    "rxSeq": 999,
    "message": "successful",
    "localMessages": [
        {
            "message": "U&C of $0.00 used to price claim",
            "messageCode": null
        },
        {
            "message": "70-Prod/Service Not Covered",
            "messageCode": null
        }
    ],
    "rejectMessages": null
}

For Rejects:  

Request:

{
"rxClaimNbr":231374075489001,
"rxSeq": 985,
"tcdStatus": "R",
"tenantId": "RXDV1_PRD"
}

Response:

{
    "rxClaimNbr": 231374075489001,
    "rxSeq": 985,
    "message": "successful",
    "localMessages": [
        {
            "message": "DUR1:TWO LINE MESSAGE LINE1",
            "messageCode": null
        },
        {
            "message": "THIS IS LINE 2",
            "messageCode": null
        }
    ],
    "rejectMessages": [
        {
            "rejectCd": "88",
            "rejectMessage": "DUR Reject Error"
        },
        {
            "rejectCd": "569",
            "rejectMessage": "CMS Appeal Rights Notice"
        }
    ]
}

=====answer
import React, { useEffect, useState } from 'react';
import MaterialTable from 'material-table';

const ClaimsMessages = ({ request }) => {
  const [approvedClaimsData, setApprovedClaimsData] = useState([]);
  const [rejectedClaimsData, setRejectedClaimsData] = useState([]);
  const [loading, setLoading] = useState(true);

  const fetchClaimsData = async () => {
    try {
      // Replace 'your-backend-endpoint' with the actual backend endpoint URL
      const response = await fetch('your-backend-endpoint', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(request),
      });

      const data = await response.json();

      // Assuming your backend returns separate arrays for approved and rejected claims
      setApprovedClaimsData(data.approvedClaims || []);
      setRejectedClaimsData(data.rejectedClaims || []);
    } catch (error) {
      console.error('Error fetching claims data:', error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchClaimsData();
  }, [request]); // Fetch data whenever the request changes

  const columns = [
    { title: 'Rx Claim Number', field: 'rxClaimNbr' },
    { title: 'Rx Seq', field: 'rxSeq' },
    { title: 'Message', field: 'message' },
    // Add more columns based on your data structure
  ];

  if (loading) {
    return <p>Loading...</p>;
  }

  return (
    <div>
      <MaterialTable
        title="Approved Claims"
        columns={columns}
        data={approvedClaimsData}
        options={{
          pageSize: 10,
          search: false,
        }}
      />
      <MaterialTable
        title="Rejected Claims"
        columns={columns}
        data={rejectedClaimsData}
        options={{
          pageSize: 10,
          search: false,
        }}
      />
    </div>
  );
};

export default ClaimsMessages;


===
import React from 'react';
import ClaimsMessages from './ClaimsMessages';

const App = () => {
  const request = {
    rxClaimNbr: 211391504171000,
    rxSeq: 999,
    tcdStatus: 'P',
    tenantId: 'RXDV1_PRD',
  };

  return <ClaimsMessages request={request} />;
};

export default App;

