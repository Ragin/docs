import React from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles((theme) => ({
  root: {
    width: '100%',
  },
  accordion: {
    flexDirection: 'row-reverse', // This reverses the direction of the accordion
    border: 'none', // Remove border
    boxShadow: 'none', // Remove box shadow
  },
}));

const MyAccordion = () => {
  const classes = useStyles();

  return (
    <div className={classes.root}>
      <Accordion className={classes.accordion}>
        <AccordionSummary
          expandIcon={<ExpandMoreIcon />}
          aria-controls="panel1a-content"
          id="panel1a-header"
        >
          {/* Your Accordion Content Goes Here */}
        </AccordionSummary>
        <AccordionDetails>
          {/* Your Accordion Details Content Goes Here */}
        </AccordionDetails>
      </Accordion>
    </div>
  );
};


====


 Type error: Type '{ children: any; key: any; align: string; }' is not assignable to type 'IntrinsicAttributes & MUIStyledCommonProps<Theme>'.
         Property 'children' does not exist on type 'IntrinsicAttributes & MUIStyledCommonProps<Theme>'.
       
         43 |   const headersMap = (header: any) => {
         44 |     return (
       > 45 |       <StyledTableCell
            |        ^
         46 |         key={header?.code}
         47 |         align="left"
         48 |       >


======
import React from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import { styled } from '@material-ui/core/styles';

const CustomAccordion = styled(Accordion)({
  flexDirection: 'row-reverse', // This reverses the direction of the accordion
  border: 'none', // Remove border
  boxShadow: 'none', // Remove box shadow
  // Add any other custom styles as needed
});

const MyAccordion = () => {
  return (
    <CustomAccordion>
      <AccordionSummary
        expandIcon={<ExpandMoreIcon />}
        aria-controls="panel1a-content"
        id="panel1a-header"
      >
        {/* Your Accordion Content Goes Here */}
      </AccordionSummary>
      <AccordionDetails>
        {/* Your Accordion Details Content Goes Here */}
      </AccordionDetails>
    </CustomAccordion>
  );
};

export default MyAccordion;


export default MyAccordion;



"`${mbrLastName} ${mbrFirstName}(${memberId})`"

function evaluateString(targetFormat: string, ...args: any[]): string {
  return targetFormat.replace(/\${(\w+)}/g, (match, p1) => {
    const arg = args[p1];
    return arg !== undefined ? arg : match;
  });
}

// Example usage
const mbrLastName = "Doe";
const mbrFirstName = "John";
const memberId = 123;

const result = evaluateString("${mbrLastName} ${mbrFirstName}(${memberId})", {
  mbrLastName,
  mbrFirstName,
  memberId,
});
